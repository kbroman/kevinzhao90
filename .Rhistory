D <- matrix(data=0,nrow=10,ncol=6)
D[1:5,1:5] <- diag(5)
D[6:10,1:5] <- diag(5)
D
library(boot)
attach(breslow)
breslow
D[,6] <- breslow$smoke
D
D <- matrix(data=0,nrow=10,ncol=6)
D[1:5,1:5] <- diag(5)
D[6:10,1:5] <- diag(5)
D[,6] <- breslow$smoke
colnames(D) <- c("age40","age50","age60","age70","age80","smoke")
# Starting point
theta_start <- matrix(data=0,nrow=1,ncol=6)
colnames(theta_start) <- c("age40","age50","age60","age70","age80","smoke")
Theta <- t(theta_start)
# Iteration
total=20
for(j in 1:total)
{
eta <- as.vector((D)%*%(Theta)+log(breslow$n))
lambda <- exp(eta)
mu <- breslow$y - lambda
W <- diag(-lambda)
Theta <- Theta + solve(t(D)%*%W%*%D)%*%t(D)%*%mu
}
print(Theta)
fit3 <- glm(y~age+smoke+offset(log(n))-1,family=poisson,data=breslow)
print(fit3$coef)
D <- matrix(data=0,nrow=10,ncol=6)
D[1:5,1:5] <- diag(5)
D[6:10,1:5] <- diag(5)
D[,6] <- breslow$smoke
colnames(D) <- c("age40","age50","age60","age70","age80","smoke")
# Starting point
theta_start <- matrix(data=0,nrow=1,ncol=6)
colnames(theta_start) <- c("age40","age50","age60","age70","age80","smoke")
Theta <- t(theta_start)
# Iteration
total=20
for(j in 1:total)
{
eta <- as.vector((D)%*%(Theta)+log(breslow$n))
lambda <- exp(eta)
mu <- breslow$y - lambda
W <- diag(lambda)
Theta <- Theta + solve(t(D)%*%W%*%D)%*%t(D)%*%mu
}
print(Theta)
#Get the Design Matrix
D <- matrix(data=0,nrow=10,ncol=6)
D[1:5,1:5] <- diag(5)
D[6:10,1:5] <- diag(5)
D[,6] <- breslow$smoke
colnames(D) <- c("age40","age50","age60","age70","age80","smoke")
# Starting point
theta_start <- matrix(data=0,nrow=1,ncol=6)
colnames(theta_start) <- c("age40","age50","age60","age70","age80","smoke")
Theta <- t(theta_start)
# Iteration
total=20
diff=rep(0,20)
for(j in 1:total)
{
eta <- as.vector((D)%*%(Theta)+log(breslow$n))
lambda <- exp(eta)
mu <- breslow$y - lambda
W <- diag(lambda)
Theta <- Theta + solve(t(D)%*%W%*%D)%*%t(D)%*%mu
diff[i]=sum(abs(Theta-fit$coef))
}
print(Theta)
---
title: "HW3P3"
output: pdf_document
---
---
title: "HW3P2"
output: pdf_document
---
```{r GLM by R}
library(boot)
attach(breslow)
fit3 <- glm(y~age+smoke+offset(log(n))-1,family=poisson,data=breslow)
print(fit3$coef)
```
For IRLS, we use the following code to get the result of the Poisson GLM, the convergence is shown in the graph.
```{r IRLS}
#Get the Design Matrix
D <- matrix(data=0,nrow=10,ncol=6)
D[1:5,1:5] <- diag(5)
D[6:10,1:5] <- diag(5)
D[,6] <- breslow$smoke
colnames(D) <- c("age40","age50","age60","age70","age80","smoke")
# Starting point
theta_start <- matrix(data=0,nrow=1,ncol=6)
colnames(theta_start) <- c("age40","age50","age60","age70","age80","smoke")
Theta <- t(theta_start)
# Iteration
total=20
diff=rep(0,20)
for(j in 1:total)
{
eta <- as.vector((D)%*%(Theta)+log(breslow$n))
lambda <- exp(eta)
mu <- breslow$y - lambda
W <- diag(lambda)
Theta <- Theta + solve(t(D)%*%W%*%D)%*%t(D)%*%mu
diff[i]=sum(abs(Theta-fit$coef))
}
print(Theta)
```
diff
fit$coef
#Get the Design Matrix
D <- matrix(data=0,nrow=10,ncol=6)
D[1:5,1:5] <- diag(5)
D[6:10,1:5] <- diag(5)
D[,6] <- breslow$smoke
colnames(D) <- c("age40","age50","age60","age70","age80","smoke")
# Starting point
theta_start <- matrix(data=0,nrow=1,ncol=6)
colnames(theta_start) <- c("age40","age50","age60","age70","age80","smoke")
Theta <- t(theta_start)
# Iteration
total=20
diff=rep(0,20)
for(j in 1:total)
{
eta <- as.vector((D)%*%(Theta)+log(breslow$n))
lambda <- exp(eta)
mu <- breslow$y - lambda
W <- diag(lambda)
Theta <- Theta + solve(t(D)%*%W%*%D)%*%t(D)%*%mu
diff[i]=sum(abs(Theta-fit3$coef))
}
print(Theta)
#Get the Design Matrix
D <- matrix(data=0,nrow=10,ncol=6)
D[1:5,1:5] <- diag(5)
D[6:10,1:5] <- diag(5)
D[,6] <- breslow$smoke
colnames(D) <- c("age40","age50","age60","age70","age80","smoke")
# Starting point
theta_start <- matrix(data=0,nrow=1,ncol=6)
colnames(theta_start) <- c("age40","age50","age60","age70","age80","smoke")
Theta <- t(theta_start)
# Iteration
total=20
diff=rep(0,20)
for(j in 1:total)
{
eta <- as.vector((D)%*%(Theta)+log(breslow$n))
lambda <- exp(eta)
mu <- breslow$y - lambda
W <- diag(lambda)
Theta <- Theta + solve(t(D)%*%W%*%D)%*%t(D)%*%mu
diff[j]=sum(abs(Theta-fit3$coef))
}
print(Theta)
diff
plot(diff)
legend("topright",co"red",pch=1)
legend("topright",col="red",pch=1)
install.packages("foreach")
library(foreach)
foreach(i=1:10) %dopar% {
rnorm(1000,0,1)^2+1
}
foreach(i=1:10) %dopar% {
i
}
foreach(i=1:10) %do% {
i
}
foreach(i=1:10,.combine=cbind) %do% {
i
}
}
matrix<-foreach(i=1:10,.combine=rbind) %do% {
c(i,i)
}
matrix
install.packages("doParallel")
library(doParallel)
cl <- makeCluster(2)
cl
cl <- makeCluster(2)
cl
icount(100)
x <- iris[which(iris[,5] != "setosa"), c(1,5)]
trials <- 10000
ptime <- system.time({
r <- foreach(icount(trials), .combine=cbind) %dopar% {
ind <- sample(100, 100, replace=TRUE)
result1 <- glm(x[ind,2]~x[ind,1], family=binomial(logit))
coefficients(result1)
}
})[3]
registerDoParallel(cl)
x <- iris[which(iris[,5] != "setosa"), c(1,5)]
trials <- 10000
ptime <- system.time({
r <- foreach(icount(trials), .combine=cbind) %dopar% {
ind <- sample(100, 100, replace=TRUE)
result1 <- glm(x[ind,2]~x[ind,1], family=binomial(logit))
}
coefficients(result1)
})[3]
ptime
stime <- system.time({
r <- foreach(icount(trials), .combine=cbind) %do% {
ind <- sample(100, 100, replace=TRUE)
result1 <- glm(x[ind,2]~x[ind,1], family=binomial(logit))
coefficients(result1)
}
})[3]
stime
registerDoParallel(2)
x <- iris[which(iris[,5] != "setosa"), c(1,5)]
trials <- 10000
ptime <- system.time({
r <- foreach(icount(trials), .combine=cbind) %dopar% {
ind <- sample(100, 100, replace=TRUE)
coefficients(result1)
result1 <- glm(x[ind,2]~x[ind,1], family=binomial(logit))
}
})[3]
stime <- system.time({
r <- foreach(icount(trials), .combine=cbind) %do% {
ptime
ind <- sample(100, 100, replace=TRUE)
result1 <- glm(x[ind,2]~x[ind,1], family=binomial(logit))
coefficients(result1)
}
})[3]
stime
ptime
simte
ptime
smite
stime
library(foreach)
library(doParallel)
registerDoParallel(cores=4)
x <- iris[which(iris[,5] != "setosa"), c(1,5)]
trials <- 10000
ptime <- system.time({
r <- foreach(icount(trials), .combine=cbind) %dopar% {
ind <- sample(100, 100, replace=TRUE)
result1 <- glm(x[ind,2]~x[ind,1], family=binomial(logit))
coefficients(result1)
}
})[3]
ptime
stime <- system.time({
r <- foreach(icount(trials), .combine=cbind) %do% {
ind <- sample(100, 100, replace=TRUE)
result1 <- glm(x[ind,2]~x[ind,1], family=binomial(logit))
coefficients(result1)
}
})[3]
stime
getDoParWorkers()
r
str(r)
str(r)
getDoParName()
getDoParVersion()
getDoParWorkers()
options(cores-2)
options(cores=2)
getDoParWorkers()
stopCluster(cl)
load("C:/Users/KevinZhao/SkyDrive/Research/ProjectInATM/CodesNewModel/WorkSpace/GenSAComparison/OldPara10000.RData")
mle_mean1
install.packages("roxygen2")
install.packages("devtools")
library(simBM)
vignette
vigenette
vignette()
R_LIBS_USER
library(devtools)
build(simBM)
getwd()
cd
getwd(~)
getwd("~")
getwd("~/")
getwd("../")
getwd("..")
setwd("..")
getwd()
setwd("~")
getwd()
setwd("../SkyDrive/SecondYearPhD/2ndSemester/BMI826/HW4")
build("simBM)
build("simBM")
remove.packages("simBM", lib="~/R/win-library/3.1")
